language: android

jdk: oraclejdk8

dist: disco

sudo: required

android:
  components:
    - tools
    - build-tools-29.0.0
    - android-29
    - extra-android-m2repository
  licenses:
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'

env:
 global:
  - ANDROID_COMPILE_SDK=29
  - ANDROID_BUILD_TOOLS=29.0.0
  - ANDROID_SDK_TOOLS=4333796

before_install:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

script:
  - ./gradlew assembleDebug

after_script:
  - cd app
  - cd build
  - cd outputs
  - cd apk
  - cd debug
  - ls -ll

deploy:
  provider: releases
  api_key: "${GH_TOKEN}"
  file: "./app/build/outputs/apk/debug/app-debug.apk"
  skip_cleanup: true
  draft: true

branches:
  only:
    - master